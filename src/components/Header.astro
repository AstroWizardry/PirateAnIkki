---
// Static header component with React islands for interactivity
import SearchBar from './SearchBar';
import ModeToggles from './ModeToggles';

export interface Props {
  onSearch?: (query: string) => void;
}

const { onSearch } = Astro.props;
---

<header class="bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex items-center">
        <h1 class="text-xl sm:text-2xl font-bold text-gray-900 dark:text-white">
          PirateAnIkki
        </h1>
        <span class="ml-2 text-xs sm:text-sm text-gray-500 dark:text-gray-400 hidden sm:inline">
          Manga Reader
        </span>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex space-x-8">
        <a
          href="/"
          class="text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium"
        >
          Home
        </a>
        <a
          href="/browse"
          class="text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium"
        >
          Browse
        </a>
        <a
          href="/library"
          class="text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium"
        >
          Library
        </a>
        <a
          href="/favorites"
          class="text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium"
        >
          Favorites
        </a>
      </nav>

      <!-- Search and Controls -->
      <div class="flex items-center space-x-4">
        <!-- Desktop Search - React Island -->
        <div class="hidden sm:block">
          <SearchBar 
            client:load 
            onSearch={onSearch} 
            className="w-48 lg:w-64"
          />
        </div>

        <!-- Mode Toggles - React Island -->
        <ModeToggles client:load />

        <!-- Mobile Search Toggle -->
        <button
          type="button"
          id="mobile-search-toggle"
          class="sm:hidden p-2 rounded-md text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-700"
        >
          <svg
            class="h-6 w-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
            />
          </svg>
        </button>

        <!-- Mobile Menu Button -->
        <button
          type="button"
          id="mobile-menu-toggle"
          class="md:hidden p-2 rounded-md text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-700"
        >
          <svg
            class="h-6 w-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"
            />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Menu -->
    <div class="md:hidden hidden" id="mobile-menu">
      <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 border-t border-gray-200 dark:border-gray-700">
        <!-- Mobile Search -->
        <div class="mb-4">
          <SearchBar 
            client:load 
            onSearch={onSearch} 
            className="w-full"
          />
        </div>

        <!-- Mobile Mode Toggles -->
        <div class="mb-4">
          <ModeToggles client:load />
        </div>

        <!-- Mobile Navigation Links -->
        <a
          href="/"
          class="text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white block px-3 py-2 rounded-md text-base font-medium"
        >
          Home
        </a>
        <a
          href="/browse"
          class="text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white block px-3 py-2 rounded-md text-base font-medium"
        >
          Browse
        </a>
        <a
          href="/library"
          class="text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white block px-3 py-2 rounded-md text-base font-medium"
        >
          Library
        </a>
        <a
          href="/favorites"
          class="text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white block px-3 py-2 rounded-md text-base font-medium"
        >
          Favorites
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  // Client-side interactivity for header
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileSearchToggle = document.getElementById('mobile-search-toggle');
    
    // Mobile menu toggle
    if (mobileMenuToggle && mobileMenu) {
      mobileMenuToggle.addEventListener('click', function() {
        const isOpen = mobileMenu.classList.contains('hidden');
        mobileMenu.classList.toggle('hidden', !isOpen);
        
        // Update hamburger icon
        const svg = mobileMenuToggle.querySelector('svg');
        if (svg) {
          const path = svg.querySelector('path');
          if (path) {
            path.setAttribute('d', isOpen ? "M6 18L18 6M6 6l12 12" : "M4 6h16M4 12h16M4 18h16");
          }
        }
      });
    }
    
    // Mobile search toggle (if needed)
    if (mobileSearchToggle) {
      mobileSearchToggle.addEventListener('click', function() {
        const mobileSearch = document.getElementById('mobile-search');
        if (mobileSearch) {
          mobileSearch.focus();
        }
      });
    }
  });
</script> 